#!/usr/bin/env php
<?php
declare(strict_types=1);

require __DIR__ . "/../app/bootstrap.php";

use DiContainerBenchmarks\Benchmark\Benchmark;
use DiContainerBenchmarks\Benchmark\WebBenchmarkContext;
use DiContainerBenchmarks\Container\ContainerDefinitions;
use DiContainerBenchmarks\OutputGenerator\HtmlOutputGenerator;
use DiContainerBenchmarks\TestSuite\TestSuite1;
use DiContainerBenchmarks\TestSuite\TestSuite2;
use DiContainerBenchmarks\TestSuite\TestSuite3;
use DiContainerBenchmarks\TestSuite\TestSuite4;
use DiContainerBenchmarks\TestSuite\TestSuite5;
use DiContainerBenchmarks\TestSuite\TestSuite6;
use DiContainerBenchmarks\TestSuite\TestSuite7;

$testSuites = [
    new TestSuite1(),
    new TestSuite2(),
    new TestSuite3(),
    new TestSuite4(),
    new TestSuite5(),
    new TestSuite6(),
    new TestSuite7(),
];

$containers = ContainerDefinitions::getAllContainerDefinitions();

$outputGenerators = [
    new HtmlOutputGenerator(PROJECT_ROOT . "/docs/benchmark.html"),
];

// Validating if benchmark URL is correctly set
$benchmarkUrl = getenv("BENCHMARK_URL");
if (empty($argv[1]) === false) {
    $benchmarkUrl = $argv[1];
}
if ($benchmarkUrl === false) {
    echo "Either specify the \"BENCHMARK_URL\" environment variable or pass it as an argument\n";
    exit(-1);
}

$benchmarkUrl = trim($benchmarkUrl, '"');

$benchmark = new Benchmark(new WebBenchmarkContext($benchmarkUrl));

if (isset($argv[1]) && $argv[1] === "build") {
    $benchmark->generateTestCases($testSuites);
    $benchmark->buildContainers($containers);
} else {
    sleep(2);
    $benchmark->runBenchmark($testSuites, $containers, $outputGenerators);
}
